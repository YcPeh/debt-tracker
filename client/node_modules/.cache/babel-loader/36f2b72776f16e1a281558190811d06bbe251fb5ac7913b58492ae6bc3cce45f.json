{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Project\\\\debt-tracker\\\\client\\\\src\\\\component\\\\UserRegisterForm.js\",\n  _s = $RefreshSig$();\nimport { Button, Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { addUserAsync, addUserInfo, closeForm, refreshUser } from \"../features/user/userSlice\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserRegisterForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const handleSubmit = async e => {\n    try {\n      e.preventDefault();\n      dispatch(closeForm());\n      const name = e.target.elements.name.value;\n      const imageFile = e.target.elements.imageFile.files[0];\n      const imageFileName = e.target.elements.imageFile.files[0].name;\n      const formData = new FormData();\n      formData.append('name', name);\n      formData.append('image', imageFile);\n      // Make the API request\n      await axios.post('http://localhost:5000', formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      dispatch(addUserInfo(name, imageFileName));\n      // console.log('in try')\n    } catch (error) {\n      // Handle any errors\n      // console.log('in catch')\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"name\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"imageFile\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Image File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(UserRegisterForm, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = UserRegisterForm;\nvar _c;\n$RefreshReg$(_c, \"UserRegisterForm\");","map":{"version":3,"names":["Button","Form","useDispatch","addUserAsync","addUserInfo","closeForm","refreshUser","axios","jsxDEV","_jsxDEV","UserRegisterForm","_s","dispatch","handleSubmit","e","preventDefault","name","target","elements","value","imageFile","files","imageFileName","formData","FormData","append","post","headers","error","console","log","onSubmit","children","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","variant","_c","$RefreshReg$"],"sources":["D:/Code/Project/debt-tracker/client/src/component/UserRegisterForm.js"],"sourcesContent":["import { Button, Form } from \"react-bootstrap\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { addUserAsync, addUserInfo, closeForm, refreshUser } from \"../features/user/userSlice\";\r\nimport axios from \"axios\";\r\n\r\n\r\n\r\nexport const UserRegisterForm = () => {\r\n    const dispatch = useDispatch();\r\n    const handleSubmit = async (e) => {\r\n        try {\r\n            e.preventDefault();\r\n            dispatch(closeForm());\r\n            const name = e.target.elements.name.value;\r\n            const imageFile = e.target.elements.imageFile.files[0];\r\n            const imageFileName = e.target.elements.imageFile.files[0].name;\r\n            const formData = new FormData();\r\n            formData.append('name', name);\r\n            formData.append('image', imageFile)\r\n            // Make the API request\r\n            await axios.post('http://localhost:5000', formData, {\r\n                headers: {\r\n                    \"Content-Type\": \"multipart/form-data\",\r\n                },\r\n            })\r\n            dispatch(addUserInfo(name,imageFileName))\r\n            // console.log('in try')\r\n        } catch (error) {\r\n            // Handle any errors\r\n            // console.log('in catch')\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"imageFile\" className=\"mb-3\">\r\n                <Form.Label>Image File</Form.Label>\r\n                <Form.Control type=\"file\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}