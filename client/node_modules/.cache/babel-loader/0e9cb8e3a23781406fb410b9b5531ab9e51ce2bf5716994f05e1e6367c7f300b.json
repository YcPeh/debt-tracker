{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Project\\\\debt-tracker\\\\client\\\\src\\\\component\\\\UserRegisterForm.js\",\n  _s = $RefreshSig$();\nimport { Button, Form } from \"react-bootstrap\";\nimport { useDispatch } from \"react-redux\";\nimport { addUserAsync, addUserInfo, closeForm } from \"../features/user/userSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserRegisterForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(closeForm());\n    const name = e.target.elements.name.value;\n    // const imageFile = e.target.elements.imageFile.files[0].name;\n    const imageFile = e.target.elements.imageFile.files[0];\n\n    // console.log(e.target.elements.imageFile.files)\n\n    // dispatch(addUserInfo({ name: name, imageFile: imageFile }));\n\n    const reader = new FileReader();\n    reader.onload = () => {\n      const result = reader.result;\n      const fileData = new Uint8Array(result);\n      let formData = new FormData();\n      formData.append('name', name);\n\n      // formData.append('image', new Blob({ data: fileData }, { contentType: fileData.contentType }));\n\n      // formData.append('image', { data: fileData})\n      // formData.append('image', { contentType: fileData.contentType})\n\n      formData.append('image', fileData);\n\n      // formData.append('image', new Blob([fileData]), 'image.png');\n\n      // console.log('formData.get(\\'image\\')', formData.get('image'));  // Log the object\n\n      // To see the contents of the object, you can use console.log with the object as an argument\n\n      console.log('image data:', formData.get('image').data);\n      console.log('content type:', formData.get('image').contentType);\n      dispatch(addUserAsync({\n        nameData: name,\n        imageData: fileData,\n        formData: formData\n      }));\n    };\n    reader.readAsArrayBuffer(imageFile);\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"name\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"imageFile\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Image File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(UserRegisterForm, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n_c = UserRegisterForm;\nvar _c;\n$RefreshReg$(_c, \"UserRegisterForm\");","map":{"version":3,"names":["Button","Form","useDispatch","addUserAsync","addUserInfo","closeForm","jsxDEV","_jsxDEV","UserRegisterForm","_s","dispatch","handleSubmit","e","preventDefault","name","target","elements","value","imageFile","files","reader","FileReader","onload","result","fileData","Uint8Array","formData","FormData","append","console","log","get","data","contentType","nameData","imageData","readAsArrayBuffer","onSubmit","children","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","variant","_c","$RefreshReg$"],"sources":["D:/Code/Project/debt-tracker/client/src/component/UserRegisterForm.js"],"sourcesContent":["import { Button, Form } from \"react-bootstrap\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { addUserAsync, addUserInfo, closeForm } from \"../features/user/userSlice\";\r\n\r\n\r\n\r\nexport const UserRegisterForm = () => {\r\n    const dispatch = useDispatch();\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        dispatch(closeForm());\r\n\r\n        const name = e.target.elements.name.value;\r\n        // const imageFile = e.target.elements.imageFile.files[0].name;\r\n        const imageFile = e.target.elements.imageFile.files[0];\r\n\r\n        // console.log(e.target.elements.imageFile.files)\r\n\r\n        // dispatch(addUserInfo({ name: name, imageFile: imageFile }));\r\n\r\n        const reader = new FileReader();\r\n\r\n        reader.onload = () => {\r\n            const result = reader.result;\r\n            const fileData = new Uint8Array(result);\r\n\r\n            let formData = new FormData();\r\n            formData.append('name', name);\r\n\r\n            // formData.append('image', new Blob({ data: fileData }, { contentType: fileData.contentType }));\r\n\r\n            // formData.append('image', { data: fileData})\r\n            // formData.append('image', { contentType: fileData.contentType})\r\n\r\n            formData.append('image', fileData)\r\n\r\n            // formData.append('image', new Blob([fileData]), 'image.png');\r\n\r\n            // console.log('formData.get(\\'image\\')', formData.get('image'));  // Log the object\r\n\r\n\r\n\r\n            // To see the contents of the object, you can use console.log with the object as an argument\r\n\r\n            console.log('image data:', formData.get('image').data);\r\n\r\n            console.log('content type:', formData.get('image').contentType);\r\n\r\n            dispatch(addUserAsync({ nameData: name, imageData: fileData, formData: formData }));\r\n        };\r\n\r\n        reader.readAsArrayBuffer(imageFile);\r\n\r\n\r\n    }\r\n    return (\r\n        <Form onSubmit={handleSubmit}>\r\n            <Form.Group className=\"mb-3\" controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"imageFile\" className=\"mb-3\">\r\n                <Form.Label>Image File</Form.Label>\r\n                <Form.Control type=\"file\" />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}