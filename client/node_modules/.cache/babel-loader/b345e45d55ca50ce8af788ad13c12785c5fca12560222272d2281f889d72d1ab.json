{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Project\\\\debt-tracker\\\\client\\\\src\\\\component\\\\RenderBarChart.js\";\nimport React from 'react';\nimport { BarChart } from './BarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RenderBarChart = _ref => {\n  let {\n    totalDebt,\n    remainingDebt\n  } = _ref;\n  console.log('totalDebt');\n  console.log(totalDebt);\n  console.log('remainingDebt');\n  console.log(remainingDebt);\n  const colorForRemainingDebt = remainingDebt > 0 ? 'red' : 'orange';\n  const data = {\n    labels: ['Debt'],\n    datasets: [{\n      label: 'Remaining Debt',\n      data: [remainingDebt],\n      // backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      backgroundColor: colorForRemainingDebt,\n      borderWidth: 1\n    }, {\n      label: 'Total Debt',\n      data: [totalDebt],\n      // backgroundColor: 'rgba(54, 162, 235, 0.5)',\n      backgroundColor: 'blue',\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    aspectRatio: 0.7,\n    indexAxis: 'x',\n    plugins: {\n      legend: {\n        // display: false,\n        position: 'bottom'\n      }\n    },\n    scales: {\n      x: {\n        stacked: true\n      },\n      y: {\n        stacked: true\n      }\n    },\n    // layout: {\n    //     padding: {\n    //         top: 50, // Increase top padding to make the chart taller\n    //     },\n    // },\n    responsive: true,\n    // interaction: {\n    //     mode: 'index',\n    //     intersect: true\n    // },\n    maintainAspectRatio: false\n  };\n  return /*#__PURE__*/_jsxDEV(BarChart, {\n    data: data,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 12\n  }, this);\n};\n_c = RenderBarChart;\nexport default RenderBarChart;\nvar _c;\n$RefreshReg$(_c, \"RenderBarChart\");","map":{"version":3,"names":["React","BarChart","jsxDEV","_jsxDEV","RenderBarChart","_ref","totalDebt","remainingDebt","console","log","colorForRemainingDebt","data","labels","datasets","label","backgroundColor","borderWidth","options","aspectRatio","indexAxis","plugins","legend","position","scales","x","stacked","y","responsive","maintainAspectRatio","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Code/Project/debt-tracker/client/src/component/RenderBarChart.js"],"sourcesContent":["import React from 'react';\r\nimport { BarChart } from './BarChart';\r\n\r\nconst RenderBarChart = ({ totalDebt, remainingDebt }) => {\r\n    console.log('totalDebt')\r\n    console.log(totalDebt)\r\n    console.log('remainingDebt')\r\n    console.log(remainingDebt)\r\n    const colorForRemainingDebt = remainingDebt > 0 ? 'red' : 'orange';\r\n    const data = {\r\n        labels: ['Debt'],\r\n        datasets: [\r\n            {\r\n                label: 'Remaining Debt',\r\n                data: [remainingDebt],\r\n                // backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n                backgroundColor: colorForRemainingDebt,\r\n                borderWidth: 1,\r\n            },\r\n            {\r\n                label: 'Total Debt',\r\n                data: [totalDebt],\r\n                // backgroundColor: 'rgba(54, 162, 235, 0.5)',\r\n                backgroundColor: 'blue',\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        aspectRatio: 0.7,\r\n        indexAxis: 'x',\r\n        plugins: {\r\n            legend: {\r\n                // display: false,\r\n                position: 'bottom',\r\n            },\r\n        },\r\n        scales: {\r\n            x: {\r\n                stacked: true,\r\n            },\r\n            y: {\r\n                stacked: true,\r\n            },\r\n        },\r\n        // layout: {\r\n        //     padding: {\r\n        //         top: 50, // Increase top padding to make the chart taller\r\n        //     },\r\n        // },\r\n        responsive: true,\r\n        // interaction: {\r\n        //     mode: 'index',\r\n        //     intersect: true\r\n        // },\r\n        maintainAspectRatio: false,\r\n    };\r\n\r\n    return <BarChart data={data} options={options} />;\r\n};\r\n\r\nexport default RenderBarChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,cAAc,GAAGC,IAAA,IAAkC;EAAA,IAAjC;IAAEC,SAAS;IAAEC;EAAc,CAAC,GAAAF,IAAA;EAChDG,OAAO,CAACC,GAAG,CAAC,WAAW,CAAC;EACxBD,OAAO,CAACC,GAAG,CAACH,SAAS,CAAC;EACtBE,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAC5BD,OAAO,CAACC,GAAG,CAACF,aAAa,CAAC;EAC1B,MAAMG,qBAAqB,GAAGH,aAAa,GAAG,CAAC,GAAG,KAAK,GAAG,QAAQ;EAClE,MAAMI,IAAI,GAAG;IACTC,MAAM,EAAE,CAAC,MAAM,CAAC;IAChBC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,gBAAgB;MACvBH,IAAI,EAAE,CAACJ,aAAa,CAAC;MACrB;MACAQ,eAAe,EAAEL,qBAAqB;MACtCM,WAAW,EAAE;IACjB,CAAC,EACD;MACIF,KAAK,EAAE,YAAY;MACnBH,IAAI,EAAE,CAACL,SAAS,CAAC;MACjB;MACAS,eAAe,EAAE,MAAM;MACvBC,WAAW,EAAE;IACjB,CAAC;EAET,CAAC;EAED,MAAMC,OAAO,GAAG;IACZC,WAAW,EAAE,GAAG;IAChBC,SAAS,EAAE,GAAG;IACdC,OAAO,EAAE;MACLC,MAAM,EAAE;QACJ;QACAC,QAAQ,EAAE;MACd;IACJ,CAAC;IACDC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,OAAO,EAAE;MACb,CAAC;MACDC,CAAC,EAAE;QACCD,OAAO,EAAE;MACb;IACJ,CAAC;IACD;IACA;IACA;IACA;IACA;IACAE,UAAU,EAAE,IAAI;IAChB;IACA;IACA;IACA;IACAC,mBAAmB,EAAE;EACzB,CAAC;EAED,oBAAOzB,OAAA,CAACF,QAAQ;IAACU,IAAI,EAAEA,IAAK;IAACM,OAAO,EAAEA;EAAQ;IAAAY,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrD,CAAC;AAACC,EAAA,GAzDI7B,cAAc;AA2DpB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}