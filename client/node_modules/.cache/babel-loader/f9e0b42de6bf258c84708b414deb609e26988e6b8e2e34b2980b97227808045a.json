{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Project\\\\debt-tracker\\\\client\\\\src\\\\component\\\\RenderBarChart.js\";\nimport React from 'react';\nimport { BarChart } from './BarChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RenderBarChart = _ref => {\n  let {\n    totalDebt,\n    remainingDebt,\n    labels\n  } = _ref;\n  // console.log('totalDebt')\n  // console.log(totalDebt)\n  // console.log('remainingDebt')\n  // console.log(remainingDebt)\n  const colorForRemainingDebt = remainingDebt > 0 ? 'red' : 'orange';\n  const data = {\n    labels: [labels],\n    datasets: [{\n      label: `Remaining Debt (${remainingDebt})`,\n      data: [remainingDebt],\n      // backgroundColor: 'rgba(255, 99, 132, 0.5)',\n      backgroundColor: colorForRemainingDebt,\n      borderWidth: 1\n    }, {\n      label: `Total Debt  (${totalDebt})`,\n      data: [totalDebt],\n      // backgroundColor: 'rgba(54, 162, 235, 0.5)',\n      backgroundColor: 'blue',\n      borderWidth: 1\n    }]\n  };\n  const options = {\n    aspectRatio: 0.7,\n    indexAxis: 'x',\n    plugins: {\n      legend: {\n        // display: false,\n        position: 'bottom'\n        // align: 'start',\n      },\n\n      title: {\n        display: false\n        // text: `Remaining Debt: ${remainingDebt}\\nTotal Debt: ${totalDebt}`,\n        // padding: { top: 10, bottom: 30 }, // Adjust the padding as needed\n      }\n    },\n\n    scales: {\n      x: {\n        stacked: true\n      },\n      y: {\n        stacked: true\n      }\n    },\n    // layout: {\n    //     padding: {\n    //         top: 50, // Increase top padding to make the chart taller\n    //     },\n    // },\n    responsive: true,\n    // interaction: {\n    //     mode: 'index',\n    //     intersect: true\n    // },\n    maintainAspectRatio: false,\n    callbacks: {\n      footer: context => {\n        const data = context.dataset.data;\n        if (data.length > 0) {\n          const remainingDebt = data[0];\n          const totalDebt = data[1];\n          return `Remaining Debt: ${remainingDebt}\\nTotal Debt: ${totalDebt}`;\n        }\n        return '';\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BarChart, {\n    data: data,\n    options: options\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 12\n  }, this);\n};\n_c = RenderBarChart;\nexport default RenderBarChart;\nvar _c;\n$RefreshReg$(_c, \"RenderBarChart\");","map":{"version":3,"names":["React","BarChart","jsxDEV","_jsxDEV","RenderBarChart","_ref","totalDebt","remainingDebt","labels","colorForRemainingDebt","data","datasets","label","backgroundColor","borderWidth","options","aspectRatio","indexAxis","plugins","legend","position","title","display","scales","x","stacked","y","responsive","maintainAspectRatio","callbacks","footer","context","dataset","length","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Code/Project/debt-tracker/client/src/component/RenderBarChart.js"],"sourcesContent":["import React from 'react';\r\nimport { BarChart } from './BarChart';\r\n\r\nconst RenderBarChart = ({ totalDebt, remainingDebt, labels }) => {\r\n    // console.log('totalDebt')\r\n    // console.log(totalDebt)\r\n    // console.log('remainingDebt')\r\n    // console.log(remainingDebt)\r\n    const colorForRemainingDebt = remainingDebt > 0 ? 'red' : 'orange';\r\n    const data = {\r\n        labels: [labels],\r\n        datasets: [\r\n            {\r\n                label: `Remaining Debt (${remainingDebt})`,\r\n                data: [remainingDebt],\r\n                // backgroundColor: 'rgba(255, 99, 132, 0.5)',\r\n                backgroundColor: colorForRemainingDebt,\r\n                borderWidth: 1,\r\n            },\r\n            {\r\n                label: `Total Debt  (${totalDebt})`,\r\n                data: [totalDebt],\r\n                // backgroundColor: 'rgba(54, 162, 235, 0.5)',\r\n                backgroundColor: 'blue',\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    const options = {\r\n        aspectRatio: 0.7,\r\n        indexAxis: 'x',\r\n        plugins: {\r\n            legend: {\r\n                // display: false,\r\n                position: 'bottom',\r\n                // align: 'start',\r\n            },\r\n            title: {\r\n                display: false,\r\n                // text: `Remaining Debt: ${remainingDebt}\\nTotal Debt: ${totalDebt}`,\r\n                // padding: { top: 10, bottom: 30 }, // Adjust the padding as needed\r\n            },\r\n        },\r\n        scales: {\r\n            x: {\r\n                stacked: true,\r\n            },\r\n            y: {\r\n                stacked: true,\r\n            },\r\n        },\r\n        // layout: {\r\n        //     padding: {\r\n        //         top: 50, // Increase top padding to make the chart taller\r\n        //     },\r\n        // },\r\n        responsive: true,\r\n        // interaction: {\r\n        //     mode: 'index',\r\n        //     intersect: true\r\n        // },\r\n        maintainAspectRatio: false,\r\n        callbacks: {\r\n            footer: (context) => {\r\n                const data = context.dataset.data;\r\n                if (data.length > 0) {\r\n                    const remainingDebt = data[0];\r\n                    const totalDebt = data[1];\r\n                    return `Remaining Debt: ${remainingDebt}\\nTotal Debt: ${totalDebt}`;\r\n                }\r\n                return '';\r\n            },\r\n        },\r\n    };\r\n\r\n    return <BarChart data={data} options={options} />;\r\n};\r\n\r\nexport default RenderBarChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,cAAc,GAAGC,IAAA,IAA0C;EAAA,IAAzC;IAAEC,SAAS;IAAEC,aAAa;IAAEC;EAAO,CAAC,GAAAH,IAAA;EACxD;EACA;EACA;EACA;EACA,MAAMI,qBAAqB,GAAGF,aAAa,GAAG,CAAC,GAAG,KAAK,GAAG,QAAQ;EAClE,MAAMG,IAAI,GAAG;IACTF,MAAM,EAAE,CAACA,MAAM,CAAC;IAChBG,QAAQ,EAAE,CACN;MACIC,KAAK,EAAG,mBAAkBL,aAAc,GAAE;MAC1CG,IAAI,EAAE,CAACH,aAAa,CAAC;MACrB;MACAM,eAAe,EAAEJ,qBAAqB;MACtCK,WAAW,EAAE;IACjB,CAAC,EACD;MACIF,KAAK,EAAG,gBAAeN,SAAU,GAAE;MACnCI,IAAI,EAAE,CAACJ,SAAS,CAAC;MACjB;MACAO,eAAe,EAAE,MAAM;MACvBC,WAAW,EAAE;IACjB,CAAC;EAET,CAAC;EAED,MAAMC,OAAO,GAAG;IACZC,WAAW,EAAE,GAAG;IAChBC,SAAS,EAAE,GAAG;IACdC,OAAO,EAAE;MACLC,MAAM,EAAE;QACJ;QACAC,QAAQ,EAAE;QACV;MACJ,CAAC;;MACDC,KAAK,EAAE;QACHC,OAAO,EAAE;QACT;QACA;MACJ;IACJ,CAAC;;IACDC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCC,OAAO,EAAE;MACb,CAAC;MACDC,CAAC,EAAE;QACCD,OAAO,EAAE;MACb;IACJ,CAAC;IACD;IACA;IACA;IACA;IACA;IACAE,UAAU,EAAE,IAAI;IAChB;IACA;IACA;IACA;IACAC,mBAAmB,EAAE,KAAK;IAC1BC,SAAS,EAAE;MACPC,MAAM,EAAGC,OAAO,IAAK;QACjB,MAAMrB,IAAI,GAAGqB,OAAO,CAACC,OAAO,CAACtB,IAAI;QACjC,IAAIA,IAAI,CAACuB,MAAM,GAAG,CAAC,EAAE;UACjB,MAAM1B,aAAa,GAAGG,IAAI,CAAC,CAAC,CAAC;UAC7B,MAAMJ,SAAS,GAAGI,IAAI,CAAC,CAAC,CAAC;UACzB,OAAQ,mBAAkBH,aAAc,iBAAgBD,SAAU,EAAC;QACvE;QACA,OAAO,EAAE;MACb;IACJ;EACJ,CAAC;EAED,oBAAOH,OAAA,CAACF,QAAQ;IAACS,IAAI,EAAEA,IAAK;IAACK,OAAO,EAAEA;EAAQ;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrD,CAAC;AAACC,EAAA,GA1EIlC,cAAc;AA4EpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}