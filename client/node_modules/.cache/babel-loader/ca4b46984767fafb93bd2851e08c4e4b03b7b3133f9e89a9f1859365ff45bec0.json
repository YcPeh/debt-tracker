{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  transaction: []\n};\nconst transactionSlice = createSlice({\n  name: 'transaction',\n  initialState,\n  reducers: {\n    initiliaseTransaction: (state, action) => {\n      state.transaction = action.payload;\n    },\n    addTransaction: (state, action) => {\n      const newTransaction = action.payload;\n      console.log('newTransaction');\n      console.log(newTransaction);\n      // state.transaction = [...state.transaction, newTransaction]\n    },\n\n    deleteTransaction: (state, action) => {\n      const idToRemove = action.payload;\n      // console.log('idToRemove in deleteTransaction')\n      // console.log(idToRemove)\n      state.transaction = state.transaction.filter(trans => trans.customId !== idToRemove);\n    },\n    updateTransaction: (state, action) => {\n      console.log('action.payload in updateTransaction');\n      console.log(action.payload);\n    },\n    calculateDebtRepaymentBalance: (state, action) => {\n      const totalDebtRM = state.transaction.reduce((total, trans) => {\n        console.log('total');\n        console.log(total);\n        console.log('trans');\n        console.log(trans);\n        if (trans.category === 'Debts' && trans.currency === 'RM') {\n          return total + trans.amount;\n        }\n        return total;\n      }, 0);\n      const totalDebtTHB = state.transaction.map(trans => {\n        if (trans.category === 'Debts' && trans.currency === 'THB') {\n          return trans.amount;\n        } else {\n          return 0;\n        }\n      });\n      const totalRepayRM = state.transaction.map(trans => {\n        if (trans.category === 'Repayments' && trans.currency === 'RM') {\n          return trans.amount;\n        } else {\n          return 0;\n        }\n      });\n      const totalRepayTHB = state.transaction.map(trans => {\n        if (trans.category === 'Repayments' && trans.currency === 'THB') {\n          return trans.amount;\n        } else {\n          return 0;\n        }\n      });\n      console.log('totalDebtRM');\n      console.log(totalDebtRM);\n      console.log('totalDebtTHB');\n      console.log(totalDebtTHB);\n      console.log('totalRepayRM');\n      console.log(totalRepayRM);\n      console.log('totalRepayTHB');\n      console.log(totalRepayTHB);\n    }\n  }\n});\nexport const {\n  initiliaseTransaction,\n  addTransaction,\n  deleteTransaction,\n  updateTransaction,\n  calculateDebtRepaymentBalance\n} = transactionSlice.actions;\nexport default transactionSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","transaction","transactionSlice","name","reducers","initiliaseTransaction","state","action","payload","addTransaction","newTransaction","console","log","deleteTransaction","idToRemove","filter","trans","customId","updateTransaction","calculateDebtRepaymentBalance","totalDebtRM","reduce","total","category","currency","amount","totalDebtTHB","map","totalRepayRM","totalRepayTHB","actions","reducer"],"sources":["D:/Code/Project/debt-tracker/client/src/features/transaction/transactionSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    transaction:[],\r\n}\r\n\r\nconst transactionSlice = createSlice({\r\n    name: 'transaction',\r\n    initialState,\r\n    reducers: {\r\n        initiliaseTransaction: (state, action) => {\r\n            state.transaction = action.payload\r\n        },\r\n        addTransaction: (state, action) => {\r\n            const newTransaction = action.payload;\r\n            console.log('newTransaction')\r\n            console.log(newTransaction)\r\n            // state.transaction = [...state.transaction, newTransaction]\r\n        },\r\n        deleteTransaction: (state, action) => {\r\n            const idToRemove = action.payload;\r\n            // console.log('idToRemove in deleteTransaction')\r\n            // console.log(idToRemove)\r\n            state.transaction = state.transaction.filter((trans) => trans.customId !== idToRemove)\r\n        },\r\n        updateTransaction: (state, action) => {\r\n            console.log('action.payload in updateTransaction')\r\n            console.log(action.payload)\r\n        },\r\n        calculateDebtRepaymentBalance: (state, action) => {\r\n            const totalDebtRM = state.transaction.reduce((total,trans) => {\r\n                console.log('total')\r\n                console.log(total)\r\n                console.log('trans')\r\n                console.log(trans)\r\n                if (trans.category === 'Debts' && trans.currency === 'RM') {\r\n                    return total + trans.amount;\r\n                }\r\n                return total;\r\n            },0)\r\n            const totalDebtTHB = state.transaction.map((trans) => {\r\n                if (trans.category === 'Debts' && trans.currency === 'THB') {\r\n                    return trans.amount;\r\n                }else{\r\n                    return 0;\r\n                }\r\n            })\r\n            const totalRepayRM = state.transaction.map((trans) => {\r\n                if (trans.category === 'Repayments' && trans.currency === 'RM') {\r\n                    return trans.amount;\r\n                }else{\r\n                    return 0;\r\n                }\r\n            })\r\n            const totalRepayTHB = state.transaction.map((trans) => {\r\n                if (trans.category === 'Repayments' && trans.currency === 'THB') {\r\n                    return trans.amount;\r\n                }else{\r\n                    return 0;\r\n                }\r\n            })\r\n            console.log('totalDebtRM')\r\n            console.log(totalDebtRM)\r\n            console.log('totalDebtTHB')\r\n            console.log(totalDebtTHB)\r\n            console.log('totalRepayRM')\r\n            console.log(totalRepayRM)\r\n            console.log('totalRepayTHB')\r\n            console.log(totalRepayTHB)\r\n        },\r\n    }\r\n});\r\n\r\nexport const { initiliaseTransaction, addTransaction, deleteTransaction, updateTransaction, calculateDebtRepaymentBalance } = transactionSlice.actions;\r\nexport default transactionSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}