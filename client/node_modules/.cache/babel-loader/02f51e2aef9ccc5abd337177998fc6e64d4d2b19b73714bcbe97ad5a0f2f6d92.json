{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Project\\\\debt-tracker\\\\src\\\\component\\\\MainContainer.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport Image from 'react-bootstrap/Image';\nimport Row from 'react-bootstrap/Row';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addUserInfo } from '../features/user/userSlice';\nimport { Button } from 'react-bootstrap';\nimport '../styles.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MainContainer() {\n  _s();\n  const {\n    userInfo\n  } = useSelector(store => store.user);\n  const renderUserColumns = () => {\n    const columns = userInfo.map(user => /*#__PURE__*/_jsxDEV(Col, {\n      className: \"userImageContainerColumn\",\n      xs: 4,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userImageContainer\",\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          className: \"userImage\",\n          src: user.path,\n          alt: user.name,\n          roundedCircle: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this));\n    const totalColumns = columns.length;\n    const rows = [];\n    const maxColumnsPerRow = 3;\n    const addButtonColumn = totalColumns % maxColumnsPerRow;\n    for (let i = 0; i < totalColumns; i += maxColumnsPerRow) {\n      const row = /*#__PURE__*/_jsxDEV(Row, {\n        children: columns.slice(i, i + maxColumnsPerRow)\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this);\n\n      // Add the 'Add Button' in the appropriate column position on the second row\n      if (totalColumns >= maxColumnsPerRow && i === maxColumnsPerRow) {\n        row.props.children.push( /*#__PURE__*/_jsxDEV(Col, {\n          className: \"userImageContainerColumn\",\n          xs: 4,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"userAddImageContainer\",\n            variant: \"transparent\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"userAddImage\",\n              src: \"AddButton.png\",\n              alt: \"Add Button\",\n              roundedCircle: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, totalColumns, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this));\n      }\n\n      // Add the 'Add Button' in the appropriate column position for multiples of maxColumnsPerRow\n      if (totalColumns >= maxColumnsPerRow * 2 && i === maxColumnsPerRow * 2 && addButtonColumn > 0) {\n        row.props.children.splice(addButtonColumn, 0, /*#__PURE__*/_jsxDEV(Col, {\n          className: \"userImageContainerColumn\",\n          xs: 4,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            className: \"userAddImageContainer\",\n            variant: \"transparent\",\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"userAddImage\",\n              src: \"AddButton.png\",\n              alt: \"Add Button\",\n              roundedCircle: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, totalColumns, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this));\n      }\n      rows.push(row);\n    }\n    return rows;\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: renderUserColumns()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(MainContainer, \"tm9u9ATcYNEYVCp8P5F3TqiqzZ4=\", false, function () {\n  return [useSelector];\n});\n_c = MainContainer;\nvar _c;\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"names":["useEffect","Col","Container","Image","Row","useDispatch","useSelector","addUserInfo","Button","jsxDEV","_jsxDEV","MainContainer","_s","userInfo","store","user","renderUserColumns","columns","map","className","xs","md","children","src","path","alt","name","roundedCircle","fileName","_jsxFileName","lineNumber","columnNumber","id","totalColumns","length","rows","maxColumnsPerRow","addButtonColumn","i","row","slice","props","push","variant","splice","_c","$RefreshReg$"],"sources":["D:/Code/Project/debt-tracker/src/component/MainContainer.js"],"sourcesContent":["import { useEffect } from 'react';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Row from 'react-bootstrap/Row';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addUserInfo } from '../features/user/userSlice';\r\nimport { Button } from 'react-bootstrap';\r\nimport '../styles.css';\r\n\r\nexport function MainContainer() {\r\n  const { userInfo } = useSelector((store) => store.user);\r\n\r\n  const renderUserColumns = () => {\r\n    const columns = userInfo.map((user) => (\r\n      <Col className='userImageContainerColumn' key={user.id} xs={4} md={4}>\r\n        <div className='userImageContainer'>\r\n          <Image\r\n            className='userImage'\r\n            src={user.path}\r\n            alt={user.name}\r\n            roundedCircle\r\n          />\r\n        </div>\r\n      </Col>\r\n    ));\r\n\r\n    const totalColumns = columns.length;\r\n    const rows = [];\r\n    const maxColumnsPerRow = 3;\r\n    const addButtonColumn = totalColumns % maxColumnsPerRow;\r\n\r\n    for (let i = 0; i < totalColumns; i += maxColumnsPerRow) {\r\n      const row = (\r\n        <Row key={i}>\r\n          {columns.slice(i, i + maxColumnsPerRow)}\r\n        </Row>\r\n      );\r\n\r\n      // Add the 'Add Button' in the appropriate column position on the second row\r\n      if (totalColumns >= maxColumnsPerRow && i === maxColumnsPerRow) {\r\n        row.props.children.push(\r\n          <Col className='userImageContainerColumn' key={totalColumns} xs={4} md={4}>\r\n            <Button className='userAddImageContainer' variant=\"transparent\">\r\n              <Image\r\n                className='userAddImage'\r\n                src=\"AddButton.png\"\r\n                alt=\"Add Button\"\r\n                roundedCircle\r\n              />\r\n            </Button>\r\n          </Col>\r\n        );\r\n      }\r\n\r\n      // Add the 'Add Button' in the appropriate column position for multiples of maxColumnsPerRow\r\n      if (totalColumns >= maxColumnsPerRow * 2 && i === maxColumnsPerRow * 2 && addButtonColumn > 0) {\r\n        row.props.children.splice(addButtonColumn, 0,\r\n          <Col className='userImageContainerColumn' key={totalColumns} xs={4} md={4}>\r\n            <Button className='userAddImageContainer' variant=\"transparent\">\r\n              <Image\r\n                className='userAddImage'\r\n                src=\"AddButton.png\"\r\n                alt=\"Add Button\"\r\n                roundedCircle\r\n              />\r\n            </Button>\r\n          </Col>\r\n        );\r\n      }\r\n\r\n      rows.push(row);\r\n    }\r\n\r\n    return rows;\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {renderUserColumns()}\r\n    </Container>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}