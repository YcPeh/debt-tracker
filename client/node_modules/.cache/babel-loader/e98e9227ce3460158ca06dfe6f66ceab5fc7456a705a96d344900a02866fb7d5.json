{"ast":null,"code":"import { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n// import { userInfo } from '../../userInfo'\n\nconst initialState = {\n  // userInfo: userInfo,\n  userInfo: null,\n  showForm: false,\n  colWidthUser: 12,\n  colWidthAddButton: 12\n};\n\n// Create the async thunk for adding user info\nexport const addUserAsync = createAsyncThunk('user/addUserInfo', async payload => {\n  const {\n    nameData,\n    imageData\n  } = payload;\n  console.log('hereee');\n  console.log(nameData);\n  console.log(imageData);\n\n  // const formData = new Object();\n  // formData.append('name', name);\n  // formData.append('image', new Blob({data: imageData}, { contentType: imageData.contentType }));\n\n  // console.log('image.data')\n  // console.log(image.data)\n\n  // console.log('formData')\n  // console.log(formData)\n  // console.log('hahaha')\n  // console.log(\"formData.get('name')\")\n  // console.log(formData.get('name'))\n  // console.log(\"formData.get('image')\")\n  // console.log(formData.get('image'))\n  try {\n    // Make the API request\n    // await axios.post('http://localhost:5000/addUser', formData);\n    // await axios.post('/addUser', formData);\n    await axios.post('/addUser', name);\n    // Return the payload to update the state\n    console.log('in try catch');\n    return payload;\n  } catch (error) {\n    // Handle any errors\n    console.log(error);\n    throw error;\n  }\n});\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    initialiseUserInfo: (state, action) => {\n      state.userInfo = action.payload;\n    },\n    // addUserInfo: (state,action) => {\n    //     // console.log([...state.userInfo])\n    //     const {name, imageFile} = action.payload;\n    //     console.log(\"addUserInfo action.payload\")\n    //     console.log(\"name\")\n    //     console.log(name)\n\n    //     const formData = new FormData();\n    //     formData.append(\"name\", name);\n\n    //     const reader = new FileReader();\n    //     reader.onload = () => {\n    //         const result = reader.result;\n    //         const fileData = new Uint8Array(result);\n    //         console.log(\"fileData\")\n    //         console.log(fileData)\n    //         formData.append(\"imageFile\", fileData);\n    //     };\n\n    //     reader.readAsArrayBuffer(imageFile);\n\n    //     try {\n    //         await axios.post(\"http://localhost:5000/addUser\", formData, {\n    //           headers: {\n    //             \"Content-Type\": \"multipart/form-data\",\n    //           },\n    //         });\n    //         dispatch(addUserInfo({ name: name, imageFile: imageFile }));\n    //       } catch (error) {\n    //         console.log(error);\n    //       }\n\n    //     // const newUserInfo = [...state.userInfo];\n    //     // const newUser = {\n    //     //     id: (state.userInfo.length + 1).toString(),\n    //     //     name: name,\n    //     //     path: path,\n    //     // }\n    //     // newUserInfo.push(newUser);\n    //     // state.userInfo = newUserInfo;\n    // },\n    setColWidth: (state, action) => {\n      // console.log(action.type)\n      // console.log(action.payload)\n      state.colWidthUser = action.payload === 1 ? 6 : 4;\n      if (action.payload === 1) {\n        state.colWidthUser = 6;\n        state.colWidthAddButton = 6;\n      } else if (action.payload === 3) {\n        state.colWidthUser = 4;\n        state.colWidthAddButton = 12;\n      } else {\n        state.colWidthUser = 4;\n        state.colWidthAddButton = 4;\n      }\n    },\n    openForm: state => {\n      state.showForm = true;\n    },\n    closeForm: state => {\n      state.showForm = false;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(addUserAsync.pending, state => {\n      // Handle pending state if needed\n    }).addCase(addUserAsync.fulfilled, (state, action) => {\n      // Update the state with the fulfilled action payload\n      const {\n        name,\n        image\n      } = action.payload;\n      console.log('hahaha');\n      console.log(name);\n      console.log(image);\n      // const newUser = {\n      //   id: (state.userInfo.length + 1).toString(),\n      //   name: name,\n      //   imageFile: imageFile,\n      // };\n      // state.userInfo.push(newUser);\n    }).addCase(addUserAsync.rejected, (state, action) => {\n      // Handle the rejected state if needed\n    });\n  }\n});\nexport const {\n  initialiseUserInfo,\n  addUserInfo,\n  setColWidth,\n  openForm,\n  closeForm\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","initialState","userInfo","showForm","colWidthUser","colWidthAddButton","addUserAsync","payload","nameData","imageData","console","log","post","name","error","userSlice","reducers","initialiseUserInfo","state","action","setColWidth","openForm","closeForm","extraReducers","builder","addCase","pending","fulfilled","image","rejected","addUserInfo","actions","reducer"],"sources":["D:/Code/Project/debt-tracker/client/src/features/user/userSlice.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\r\nimport axios from 'axios';\r\n// import { userInfo } from '../../userInfo'\r\n\r\nconst initialState = {\r\n    // userInfo: userInfo,\r\n    userInfo: null,\r\n    showForm: false,\r\n    colWidthUser: 12,\r\n    colWidthAddButton: 12,\r\n}\r\n\r\n// Create the async thunk for adding user info\r\nexport const addUserAsync = createAsyncThunk(\r\n    'user/addUserInfo',\r\n    async (payload) => {\r\n        const { nameData, imageData } = payload;\r\n        console.log('hereee')\r\n        console.log(nameData)\r\n        console.log(imageData)\r\n\r\n        // const formData = new Object();\r\n        // formData.append('name', name);\r\n        // formData.append('image', new Blob({data: imageData}, { contentType: imageData.contentType }));\r\n\r\n        // console.log('image.data')\r\n        // console.log(image.data)\r\n\r\n        // console.log('formData')\r\n        // console.log(formData)\r\n        // console.log('hahaha')\r\n        // console.log(\"formData.get('name')\")\r\n        // console.log(formData.get('name'))\r\n        // console.log(\"formData.get('image')\")\r\n        // console.log(formData.get('image'))\r\n        try {\r\n            // Make the API request\r\n            // await axios.post('http://localhost:5000/addUser', formData);\r\n            // await axios.post('/addUser', formData);\r\n            await axios.post('/addUser', name,);\r\n            // Return the payload to update the state\r\n            console.log('in try catch')\r\n            return payload;\r\n        } catch (error) {\r\n            // Handle any errors\r\n            console.log(error);\r\n            throw error;\r\n        }\r\n    }\r\n);\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState,\r\n    reducers: {\r\n        initialiseUserInfo: (state, action) => {\r\n            state.userInfo = action.payload;\r\n        },\r\n        // addUserInfo: (state,action) => {\r\n        //     // console.log([...state.userInfo])\r\n        //     const {name, imageFile} = action.payload;\r\n        //     console.log(\"addUserInfo action.payload\")\r\n        //     console.log(\"name\")\r\n        //     console.log(name)\r\n\r\n        //     const formData = new FormData();\r\n        //     formData.append(\"name\", name);\r\n\r\n        //     const reader = new FileReader();\r\n        //     reader.onload = () => {\r\n        //         const result = reader.result;\r\n        //         const fileData = new Uint8Array(result);\r\n        //         console.log(\"fileData\")\r\n        //         console.log(fileData)\r\n        //         formData.append(\"imageFile\", fileData);\r\n        //     };\r\n\r\n        //     reader.readAsArrayBuffer(imageFile);\r\n\r\n        //     try {\r\n        //         await axios.post(\"http://localhost:5000/addUser\", formData, {\r\n        //           headers: {\r\n        //             \"Content-Type\": \"multipart/form-data\",\r\n        //           },\r\n        //         });\r\n        //         dispatch(addUserInfo({ name: name, imageFile: imageFile }));\r\n        //       } catch (error) {\r\n        //         console.log(error);\r\n        //       }\r\n\r\n        //     // const newUserInfo = [...state.userInfo];\r\n        //     // const newUser = {\r\n        //     //     id: (state.userInfo.length + 1).toString(),\r\n        //     //     name: name,\r\n        //     //     path: path,\r\n        //     // }\r\n        //     // newUserInfo.push(newUser);\r\n        //     // state.userInfo = newUserInfo;\r\n        // },\r\n        setColWidth: (state, action) => {\r\n            // console.log(action.type)\r\n            // console.log(action.payload)\r\n            state.colWidthUser = action.payload === 1 ? 6 : 4\r\n            if (action.payload === 1) {\r\n                state.colWidthUser = 6;\r\n                state.colWidthAddButton = 6;\r\n            } else if (action.payload === 3) {\r\n                state.colWidthUser = 4;\r\n                state.colWidthAddButton = 12;\r\n            } else {\r\n                state.colWidthUser = 4;\r\n                state.colWidthAddButton = 4;\r\n            }\r\n        },\r\n        openForm: (state) => {\r\n            state.showForm = true;\r\n        },\r\n        closeForm: (state) => {\r\n            state.showForm = false;\r\n        },\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n            .addCase(addUserAsync.pending, (state) => {\r\n                // Handle pending state if needed\r\n            })\r\n            .addCase(addUserAsync.fulfilled, (state, action) => {\r\n                // Update the state with the fulfilled action payload\r\n                const { name, image } = action.payload;\r\n                console.log('hahaha')\r\n                console.log(name)\r\n                console.log(image)\r\n                // const newUser = {\r\n                //   id: (state.userInfo.length + 1).toString(),\r\n                //   name: name,\r\n                //   imageFile: imageFile,\r\n                // };\r\n                // state.userInfo.push(newUser);\r\n            })\r\n            .addCase(addUserAsync.rejected, (state, action) => {\r\n                // Handle the rejected state if needed\r\n            });\r\n    },\r\n})\r\n\r\nexport const { initialiseUserInfo, addUserInfo, setColWidth, openForm, closeForm } = userSlice.actions\r\nexport default userSlice.reducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}