{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  transaction: [],\n  // selectedTransaction: [],\n  debtRepayment: []\n};\nconst transactionSlice = createSlice({\n  name: 'transaction',\n  initialState,\n  reducers: {\n    initiliaseTransaction: (state, action) => {\n      state.transaction = action.payload;\n    },\n    addTransaction: (state, action) => {\n      const newTransaction = action.payload;\n      console.log('newTransaction');\n      console.log(newTransaction);\n      // state.transaction = [...state.transaction, newTransaction]\n    },\n\n    deleteTransaction: (state, action) => {\n      const idToRemove = action.payload;\n      // console.log('idToRemove in deleteTransaction')\n      // console.log(idToRemove)\n      state.transaction = state.transaction.filter(trans => trans.customId !== idToRemove);\n    },\n    updateTransaction: (state, action) => {\n      console.log('action.payload in updateTransaction');\n      console.log(action.payload);\n    },\n    // calculateDebtRepaymentBalance: (state, action) => {\n    //     const totalDebtRM = state.transaction.reduce((total,trans) => {\n    //         if (trans.category === 'Debts' && trans.currency === 'RM') {\n    //             return total + trans.amount;\n    //         }\n    //         return total;\n    //     },0)\n    //     const totalDebtTHB = state.transaction.reduce((total,trans) => {\n    //         if (trans.category === 'Debts' && trans.currency === 'THB') {\n    //             return total + trans.amount;\n    //         }\n    //         return total;\n    //     },0)\n    //     const totalRepayRM = state.transaction.reduce((total,trans) => {\n    //         if (trans.category === 'Repayments' && trans.currency === 'RM') {\n    //             return total + trans.amount;\n    //         }\n    //         return total;\n    //     },0)\n    //     const totalRepayTHB = state.transaction.reduce((total,trans) => {\n    //         if (trans.category === 'Repayments' && trans.currency === 'THB') {\n    //             return total + trans.amount;\n    //         }\n    //         return total;\n    //     },0)\n    //     console.log('totalDebtRM')\n    //     console.log(totalDebtRM)\n    //     console.log('totalDebtTHB')\n    //     console.log(totalDebtTHB)\n    //     console.log('totalRepayRM')\n    //     console.log(totalRepayRM)\n    //     console.log('totalRepayTHB')\n    //     console.log(totalRepayTHB)\n    //     const debtRepayment = {\n    //         totalDebtRM,\n    //         totalDebtTHB,\n    //         totalRepayRM,\n    //         totalRepayTHB,\n    //     }\n    //     state.debtRepayment = debtRepayment;\n    // },\n    calculateDebtRepaymentBalance: (state, action) => {\n      const debtRepayment = {\n        totalDebtRM: 0,\n        totalDebtTHB: 0,\n        totalRepayRM: 0,\n        totalRepayTHB: 0\n      };\n\n      // const transType = {\n      //     debtConsumablesRM: 0,\n      //     debtCashRM:0,\n      //     debtOnlineTransferRM:0,\n      //     debtConsumablesTHB: 0,\n      //     debtCashTHB:0,\n      //     debtOnlineTransferTHB:0,\n      //     repayConsumablesRM: 0,\n      //     repayCashRM:0,\n      //     repayOnlineTransferRM:0,\n      //     repayConsumablesTHB: 0,\n      //     repayCashTHB:0,\n      //     repayOnlineTransferTHB:0,\n      // };\n\n      state.transaction.forEach(trans => {\n        if (trans.category === 'Debts') {\n          if (trans.currency === 'RM') {\n            debtRepayment.totalDebtRM += trans.amount;\n          } else if (trans.currency === 'THB') {\n            debtRepayment.totalDebtTHB += trans.amount;\n          }\n        } else if (trans.category === 'Repayments') {\n          if (trans.currency === 'RM') {\n            debtRepayment.totalRepayRM += trans.amount;\n          } else if (trans.currency === 'THB') {\n            debtRepayment.totalRepayTHB += trans.amount;\n          }\n        }\n      });\n      console.log('totalDebtRM', debtRepayment.totalDebtRM);\n      console.log('totalDebtTHB', debtRepayment.totalDebtTHB);\n      console.log('totalRepayRM', debtRepayment.totalRepayRM);\n      console.log('totalRepayTHB', debtRepayment.totalRepayTHB);\n      state.debtRepayment = debtRepayment;\n    }\n  }\n});\nexport const {\n  initiliaseTransaction,\n  addTransaction,\n  deleteTransaction,\n  updateTransaction,\n  calculateDebtRepaymentBalance\n} = transactionSlice.actions;\nexport default transactionSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","transaction","debtRepayment","transactionSlice","name","reducers","initiliaseTransaction","state","action","payload","addTransaction","newTransaction","console","log","deleteTransaction","idToRemove","filter","trans","customId","updateTransaction","calculateDebtRepaymentBalance","totalDebtRM","totalDebtTHB","totalRepayRM","totalRepayTHB","forEach","category","currency","amount","actions","reducer"],"sources":["D:/Code/Project/debt-tracker/client/src/features/transaction/transactionSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\n\r\nconst initialState = {\r\n    transaction: [],\r\n    // selectedTransaction: [],\r\n    debtRepayment: [],\r\n}\r\n\r\nconst transactionSlice = createSlice({\r\n    name: 'transaction',\r\n    initialState,\r\n    reducers: {\r\n        initiliaseTransaction: (state, action) => {\r\n            state.transaction = action.payload\r\n        },\r\n        addTransaction: (state, action) => {\r\n            const newTransaction = action.payload;\r\n            console.log('newTransaction')\r\n            console.log(newTransaction)\r\n            // state.transaction = [...state.transaction, newTransaction]\r\n        },\r\n        deleteTransaction: (state, action) => {\r\n            const idToRemove = action.payload;\r\n            // console.log('idToRemove in deleteTransaction')\r\n            // console.log(idToRemove)\r\n            state.transaction = state.transaction.filter((trans) => trans.customId !== idToRemove)\r\n        },\r\n        updateTransaction: (state, action) => {\r\n            console.log('action.payload in updateTransaction')\r\n            console.log(action.payload)\r\n        },\r\n        // calculateDebtRepaymentBalance: (state, action) => {\r\n        //     const totalDebtRM = state.transaction.reduce((total,trans) => {\r\n        //         if (trans.category === 'Debts' && trans.currency === 'RM') {\r\n        //             return total + trans.amount;\r\n        //         }\r\n        //         return total;\r\n        //     },0)\r\n        //     const totalDebtTHB = state.transaction.reduce((total,trans) => {\r\n        //         if (trans.category === 'Debts' && trans.currency === 'THB') {\r\n        //             return total + trans.amount;\r\n        //         }\r\n        //         return total;\r\n        //     },0)\r\n        //     const totalRepayRM = state.transaction.reduce((total,trans) => {\r\n        //         if (trans.category === 'Repayments' && trans.currency === 'RM') {\r\n        //             return total + trans.amount;\r\n        //         }\r\n        //         return total;\r\n        //     },0)\r\n        //     const totalRepayTHB = state.transaction.reduce((total,trans) => {\r\n        //         if (trans.category === 'Repayments' && trans.currency === 'THB') {\r\n        //             return total + trans.amount;\r\n        //         }\r\n        //         return total;\r\n        //     },0)\r\n        //     console.log('totalDebtRM')\r\n        //     console.log(totalDebtRM)\r\n        //     console.log('totalDebtTHB')\r\n        //     console.log(totalDebtTHB)\r\n        //     console.log('totalRepayRM')\r\n        //     console.log(totalRepayRM)\r\n        //     console.log('totalRepayTHB')\r\n        //     console.log(totalRepayTHB)\r\n        //     const debtRepayment = {\r\n        //         totalDebtRM,\r\n        //         totalDebtTHB,\r\n        //         totalRepayRM,\r\n        //         totalRepayTHB,\r\n        //     }\r\n        //     state.debtRepayment = debtRepayment;\r\n        // },\r\n        calculateDebtRepaymentBalance: (state, action) => {\r\n            const debtRepayment = {\r\n                totalDebtRM: 0,\r\n                totalDebtTHB: 0,\r\n                totalRepayRM: 0,\r\n                totalRepayTHB: 0,\r\n            };\r\n\r\n            // const transType = {\r\n            //     debtConsumablesRM: 0,\r\n            //     debtCashRM:0,\r\n            //     debtOnlineTransferRM:0,\r\n            //     debtConsumablesTHB: 0,\r\n            //     debtCashTHB:0,\r\n            //     debtOnlineTransferTHB:0,\r\n            //     repayConsumablesRM: 0,\r\n            //     repayCashRM:0,\r\n            //     repayOnlineTransferRM:0,\r\n            //     repayConsumablesTHB: 0,\r\n            //     repayCashTHB:0,\r\n            //     repayOnlineTransferTHB:0,\r\n            // };\r\n\r\n            state.transaction.forEach((trans) => {\r\n                if (trans.category === 'Debts') {\r\n                    if (trans.currency === 'RM') {\r\n                        debtRepayment.totalDebtRM += trans.amount;\r\n                    } else if (trans.currency === 'THB') {\r\n                        debtRepayment.totalDebtTHB += trans.amount;\r\n                    }\r\n                } else if (trans.category === 'Repayments') {\r\n                    if (trans.currency === 'RM') {\r\n                        debtRepayment.totalRepayRM += trans.amount;\r\n                    } else if (trans.currency === 'THB') {\r\n                        debtRepayment.totalRepayTHB += trans.amount;\r\n                    }\r\n                }\r\n            });\r\n\r\n            console.log('totalDebtRM', debtRepayment.totalDebtRM);\r\n            console.log('totalDebtTHB', debtRepayment.totalDebtTHB);\r\n            console.log('totalRepayRM', debtRepayment.totalRepayRM);\r\n            console.log('totalRepayTHB', debtRepayment.totalRepayTHB);\r\n\r\n            state.debtRepayment = debtRepayment;\r\n\r\n\r\n            \r\n        },\r\n\r\n    }\r\n});\r\n\r\nexport const { initiliaseTransaction, addTransaction, deleteTransaction, updateTransaction, calculateDebtRepaymentBalance } = transactionSlice.actions;\r\nexport default transactionSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACf;EACAC,aAAa,EAAE;AACnB,CAAC;AAED,MAAMC,gBAAgB,GAAGJ,WAAW,CAAC;EACjCK,IAAI,EAAE,aAAa;EACnBJ,YAAY;EACZK,QAAQ,EAAE;IACNC,qBAAqB,EAAEA,CAACC,KAAK,EAAEC,MAAM,KAAK;MACtCD,KAAK,CAACN,WAAW,GAAGO,MAAM,CAACC,OAAO;IACtC,CAAC;IACDC,cAAc,EAAEA,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC/B,MAAMG,cAAc,GAAGH,MAAM,CAACC,OAAO;MACrCG,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;MAC7BD,OAAO,CAACC,GAAG,CAACF,cAAc,CAAC;MAC3B;IACJ,CAAC;;IACDG,iBAAiB,EAAEA,CAACP,KAAK,EAAEC,MAAM,KAAK;MAClC,MAAMO,UAAU,GAAGP,MAAM,CAACC,OAAO;MACjC;MACA;MACAF,KAAK,CAACN,WAAW,GAAGM,KAAK,CAACN,WAAW,CAACe,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,QAAQ,KAAKH,UAAU,CAAC;IAC1F,CAAC;IACDI,iBAAiB,EAAEA,CAACZ,KAAK,EAAEC,MAAM,KAAK;MAClCI,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;MAClDD,OAAO,CAACC,GAAG,CAACL,MAAM,CAACC,OAAO,CAAC;IAC/B,CAAC;IACD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACAW,6BAA6B,EAAEA,CAACb,KAAK,EAAEC,MAAM,KAAK;MAC9C,MAAMN,aAAa,GAAG;QAClBmB,WAAW,EAAE,CAAC;QACdC,YAAY,EAAE,CAAC;QACfC,YAAY,EAAE,CAAC;QACfC,aAAa,EAAE;MACnB,CAAC;;MAED;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEAjB,KAAK,CAACN,WAAW,CAACwB,OAAO,CAAER,KAAK,IAAK;QACjC,IAAIA,KAAK,CAACS,QAAQ,KAAK,OAAO,EAAE;UAC5B,IAAIT,KAAK,CAACU,QAAQ,KAAK,IAAI,EAAE;YACzBzB,aAAa,CAACmB,WAAW,IAAIJ,KAAK,CAACW,MAAM;UAC7C,CAAC,MAAM,IAAIX,KAAK,CAACU,QAAQ,KAAK,KAAK,EAAE;YACjCzB,aAAa,CAACoB,YAAY,IAAIL,KAAK,CAACW,MAAM;UAC9C;QACJ,CAAC,MAAM,IAAIX,KAAK,CAACS,QAAQ,KAAK,YAAY,EAAE;UACxC,IAAIT,KAAK,CAACU,QAAQ,KAAK,IAAI,EAAE;YACzBzB,aAAa,CAACqB,YAAY,IAAIN,KAAK,CAACW,MAAM;UAC9C,CAAC,MAAM,IAAIX,KAAK,CAACU,QAAQ,KAAK,KAAK,EAAE;YACjCzB,aAAa,CAACsB,aAAa,IAAIP,KAAK,CAACW,MAAM;UAC/C;QACJ;MACJ,CAAC,CAAC;MAEFhB,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEX,aAAa,CAACmB,WAAW,CAAC;MACrDT,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEX,aAAa,CAACoB,YAAY,CAAC;MACvDV,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEX,aAAa,CAACqB,YAAY,CAAC;MACvDX,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEX,aAAa,CAACsB,aAAa,CAAC;MAEzDjB,KAAK,CAACL,aAAa,GAAGA,aAAa;IAIvC;EAEJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEI,qBAAqB;EAAEI,cAAc;EAAEI,iBAAiB;EAAEK,iBAAiB;EAAEC;AAA8B,CAAC,GAAGjB,gBAAgB,CAAC0B,OAAO;AACtJ,eAAe1B,gBAAgB,CAAC2B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}